#pragma warning disable IDE1006, IDE0090
using OneOf;
using OneOf.Types;

namespace CWLDotNet;

internal static class LoaderInstances
{
    internal static readonly ILoader<string> StringInstance = new PrimitiveLoader<string>();
    internal static readonly ILoader<int> IntegerInstance = new PrimitiveLoader<int>();
    internal static readonly ILoader<long> LongInstance = new PrimitiveLoader<long>();
    internal static readonly ILoader<double> DoubleInstance = new PrimitiveLoader<double>();
    internal static readonly ILoader<bool> BooleanInstance = new PrimitiveLoader<bool>();
    internal static readonly ILoader<object> NullInstance = new NullLoader();
    internal static readonly ILoader<object> AnyInstance = new AnyLoader();
    internal static readonly ILoader<PrimitiveType> PrimitiveTypeLoader = new EnumLoader<PrimitiveType>();
    internal static readonly ILoader<Any> AnyLoader = new EnumLoader<Any>();
    internal static readonly ILoader<RecordField> RecordFieldLoader = new RecordLoader<RecordField>();
    internal static readonly ILoader<RecordSchema> RecordSchemaLoader = new RecordLoader<RecordSchema>();
    internal static readonly ILoader<EnumSchema> EnumSchemaLoader = new RecordLoader<EnumSchema>();
    internal static readonly ILoader<ArraySchema> ArraySchemaLoader = new RecordLoader<ArraySchema>();
    internal static readonly ILoader<CWLVersion> CWLVersionLoader = new EnumLoader<CWLVersion>();
    internal static readonly ILoader<CWLType> CWLTypeLoader = new EnumLoader<CWLType>();
    internal static readonly ILoader<File> FileLoader = new RecordLoader<File>();
    internal static readonly ILoader<Directory> DirectoryLoader = new RecordLoader<Directory>();
    internal static readonly ILoader<LoadListingEnum> LoadListingEnumLoader = new EnumLoader<LoadListingEnum>();
    internal static readonly ILoader<string> ExpressionLoader = new ExpressionLoader();
    internal static readonly ILoader<InputBinding> InputBindingLoader = new RecordLoader<InputBinding>();
    internal static readonly ILoader<InputRecordField> InputRecordFieldLoader = new RecordLoader<InputRecordField>();
    internal static readonly ILoader<InputRecordSchema> InputRecordSchemaLoader = new RecordLoader<InputRecordSchema>();
    internal static readonly ILoader<InputEnumSchema> InputEnumSchemaLoader = new RecordLoader<InputEnumSchema>();
    internal static readonly ILoader<InputArraySchema> InputArraySchemaLoader = new RecordLoader<InputArraySchema>();
    internal static readonly ILoader<OutputRecordField> OutputRecordFieldLoader = new RecordLoader<OutputRecordField>();
    internal static readonly ILoader<OutputRecordSchema> OutputRecordSchemaLoader = new RecordLoader<OutputRecordSchema>();
    internal static readonly ILoader<OutputEnumSchema> OutputEnumSchemaLoader = new RecordLoader<OutputEnumSchema>();
    internal static readonly ILoader<OutputArraySchema> OutputArraySchemaLoader = new RecordLoader<OutputArraySchema>();
    internal static readonly ILoader<InlineJavascriptRequirement> InlineJavascriptRequirementLoader = new RecordLoader<InlineJavascriptRequirement>();
    internal static readonly ILoader<SchemaDefRequirement> SchemaDefRequirementLoader = new RecordLoader<SchemaDefRequirement>();
    internal static readonly ILoader<SecondaryFileSchema> SecondaryFileSchemaLoader = new RecordLoader<SecondaryFileSchema>();
    internal static readonly ILoader<LoadListingRequirement> LoadListingRequirementLoader = new RecordLoader<LoadListingRequirement>();
    internal static readonly ILoader<EnvironmentDef> EnvironmentDefLoader = new RecordLoader<EnvironmentDef>();
    internal static readonly ILoader<CommandLineBinding> CommandLineBindingLoader = new RecordLoader<CommandLineBinding>();
    internal static readonly ILoader<CommandOutputBinding> CommandOutputBindingLoader = new RecordLoader<CommandOutputBinding>();
    internal static readonly ILoader<CommandLineBindable> CommandLineBindableLoader = new RecordLoader<CommandLineBindable>();
    internal static readonly ILoader<CommandInputRecordField> CommandInputRecordFieldLoader = new RecordLoader<CommandInputRecordField>();
    internal static readonly ILoader<CommandInputRecordSchema> CommandInputRecordSchemaLoader = new RecordLoader<CommandInputRecordSchema>();
    internal static readonly ILoader<CommandInputEnumSchema> CommandInputEnumSchemaLoader = new RecordLoader<CommandInputEnumSchema>();
    internal static readonly ILoader<CommandInputArraySchema> CommandInputArraySchemaLoader = new RecordLoader<CommandInputArraySchema>();
    internal static readonly ILoader<CommandOutputRecordField> CommandOutputRecordFieldLoader = new RecordLoader<CommandOutputRecordField>();
    internal static readonly ILoader<CommandOutputRecordSchema> CommandOutputRecordSchemaLoader = new RecordLoader<CommandOutputRecordSchema>();
    internal static readonly ILoader<CommandOutputEnumSchema> CommandOutputEnumSchemaLoader = new RecordLoader<CommandOutputEnumSchema>();
    internal static readonly ILoader<CommandOutputArraySchema> CommandOutputArraySchemaLoader = new RecordLoader<CommandOutputArraySchema>();
    internal static readonly ILoader<CommandInputParameter> CommandInputParameterLoader = new RecordLoader<CommandInputParameter>();
    internal static readonly ILoader<CommandOutputParameter> CommandOutputParameterLoader = new RecordLoader<CommandOutputParameter>();
    internal static readonly ILoader<stdin> stdinLoader = new EnumLoader<stdin>();
    internal static readonly ILoader<stdout> stdoutLoader = new EnumLoader<stdout>();
    internal static readonly ILoader<stderr> stderrLoader = new EnumLoader<stderr>();
    internal static readonly ILoader<CommandLineTool> CommandLineToolLoader = new RecordLoader<CommandLineTool>();
    internal static readonly ILoader<DockerRequirement> DockerRequirementLoader = new RecordLoader<DockerRequirement>();
    internal static readonly ILoader<SoftwareRequirement> SoftwareRequirementLoader = new RecordLoader<SoftwareRequirement>();
    internal static readonly ILoader<SoftwarePackage> SoftwarePackageLoader = new RecordLoader<SoftwarePackage>();
    internal static readonly ILoader<Dirent> DirentLoader = new RecordLoader<Dirent>();
    internal static readonly ILoader<InitialWorkDirRequirement> InitialWorkDirRequirementLoader = new RecordLoader<InitialWorkDirRequirement>();
    internal static readonly ILoader<EnvVarRequirement> EnvVarRequirementLoader = new RecordLoader<EnvVarRequirement>();
    internal static readonly ILoader<ShellCommandRequirement> ShellCommandRequirementLoader = new RecordLoader<ShellCommandRequirement>();
    internal static readonly ILoader<ResourceRequirement> ResourceRequirementLoader = new RecordLoader<ResourceRequirement>();
    internal static readonly ILoader<WorkReuse> WorkReuseLoader = new RecordLoader<WorkReuse>();
    internal static readonly ILoader<NetworkAccess> NetworkAccessLoader = new RecordLoader<NetworkAccess>();
    internal static readonly ILoader<InplaceUpdateRequirement> InplaceUpdateRequirementLoader = new RecordLoader<InplaceUpdateRequirement>();
    internal static readonly ILoader<ToolTimeLimit> ToolTimeLimitLoader = new RecordLoader<ToolTimeLimit>();
    internal static readonly ILoader<ExpressionToolOutputParameter> ExpressionToolOutputParameterLoader = new RecordLoader<ExpressionToolOutputParameter>();
    internal static readonly ILoader<WorkflowInputParameter> WorkflowInputParameterLoader = new RecordLoader<WorkflowInputParameter>();
    internal static readonly ILoader<ExpressionTool> ExpressionToolLoader = new RecordLoader<ExpressionTool>();
    internal static readonly ILoader<LinkMergeMethod> LinkMergeMethodLoader = new EnumLoader<LinkMergeMethod>();
    internal static readonly ILoader<PickValueMethod> PickValueMethodLoader = new EnumLoader<PickValueMethod>();
    internal static readonly ILoader<WorkflowOutputParameter> WorkflowOutputParameterLoader = new RecordLoader<WorkflowOutputParameter>();
    internal static readonly ILoader<WorkflowStepInput> WorkflowStepInputLoader = new RecordLoader<WorkflowStepInput>();
    internal static readonly ILoader<WorkflowStepOutput> WorkflowStepOutputLoader = new RecordLoader<WorkflowStepOutput>();
    internal static readonly ILoader<ScatterMethod> ScatterMethodLoader = new EnumLoader<ScatterMethod>();
    internal static readonly ILoader<WorkflowStep> WorkflowStepLoader = new RecordLoader<WorkflowStep>();
    internal static readonly ILoader<Workflow> WorkflowLoader = new RecordLoader<Workflow>();
    internal static readonly ILoader<SubworkflowFeatureRequirement> SubworkflowFeatureRequirementLoader = new RecordLoader<SubworkflowFeatureRequirement>();
    internal static readonly ILoader<ScatterFeatureRequirement> ScatterFeatureRequirementLoader = new RecordLoader<ScatterFeatureRequirement>();
    internal static readonly ILoader<MultipleInputFeatureRequirement> MultipleInputFeatureRequirementLoader = new RecordLoader<MultipleInputFeatureRequirement>();
    internal static readonly ILoader<StepInputExpressionRequirement> StepInputExpressionRequirementLoader = new RecordLoader<StepInputExpressionRequirement>();
    internal static readonly ILoader<OperationInputParameter> OperationInputParameterLoader = new RecordLoader<OperationInputParameter>();
    internal static readonly ILoader<OperationOutputParameter> OperationOutputParameterLoader = new RecordLoader<OperationOutputParameter>();
    internal static readonly ILoader<Operation> OperationLoader = new RecordLoader<Operation>();
    internal static readonly ILoader<List<string>> array_of_StringInstance = new ArrayLoader<string>(StringInstance);
    internal static readonly ILoader<object> union_of_NullInstance_or_StringInstance_or_array_of_StringInstance = new UnionLoader(new List<ILoader> { NullInstance, StringInstance, array_of_StringInstance });
    internal static readonly ILoader<object> uriStringInstanceTrueFalseNone = new UriLoader(StringInstance, true, false, null);
    internal static readonly ILoader<object> union_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { PrimitiveTypeLoader, RecordSchemaLoader, EnumSchemaLoader, ArraySchemaLoader, StringInstance });
    internal static readonly ILoader<List<OneOf<PrimitiveType, RecordSchema, EnumSchema, ArraySchema, string>>> array_of_union_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance = new ArrayLoader<OneOf<PrimitiveType, RecordSchema, EnumSchema, ArraySchema, string>>(union_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance);
    internal static readonly ILoader<object> union_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance_or_array_of_union_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { PrimitiveTypeLoader, RecordSchemaLoader, EnumSchemaLoader, ArraySchemaLoader, StringInstance, array_of_union_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance });
    internal static readonly ILoader<object> typedslunion_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance_or_array_of_union_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance2 = new TypeDSLLoader(union_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance_or_array_of_union_of_PrimitiveTypeLoader_or_RecordSchemaLoader_or_EnumSchemaLoader_or_ArraySchemaLoader_or_StringInstance, 2);
    internal static readonly ILoader<List<RecordField>> array_of_RecordFieldLoader = new ArrayLoader<RecordField>(RecordFieldLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_RecordFieldLoader = new UnionLoader(new List<ILoader> { NullInstance, array_of_RecordFieldLoader });
    internal static readonly ILoader<object> idmapfieldsunion_of_NullInstance_or_array_of_RecordFieldLoader = new IdMapLoader(union_of_NullInstance_or_array_of_RecordFieldLoader, "name", "type");
    internal static readonly ILoader<enum_d9cba076fca539106791a4f46d198c7fcfbdb779> enum_d9cba076fca539106791a4f46d198c7fcfbdb779Loader = new EnumLoader<enum_d9cba076fca539106791a4f46d198c7fcfbdb779>();
    internal static readonly ILoader<object> typedslenum_d9cba076fca539106791a4f46d198c7fcfbdb779Loader2 = new TypeDSLLoader(enum_d9cba076fca539106791a4f46d198c7fcfbdb779Loader, 2);
    internal static readonly ILoader<object> uriarray_of_StringInstanceTrueFalseNone = new UriLoader(array_of_StringInstance, true, false, null);
    internal static readonly ILoader<enum_d961d79c225752b9fadb617367615ab176b47d77> enum_d961d79c225752b9fadb617367615ab176b47d77Loader = new EnumLoader<enum_d961d79c225752b9fadb617367615ab176b47d77>();
    internal static readonly ILoader<object> typedslenum_d961d79c225752b9fadb617367615ab176b47d77Loader2 = new TypeDSLLoader(enum_d961d79c225752b9fadb617367615ab176b47d77Loader, 2);
    internal static readonly ILoader<enum_d062602be0b4b8fd33e69e29a841317b6ab665bc> enum_d062602be0b4b8fd33e69e29a841317b6ab665bcLoader = new EnumLoader<enum_d062602be0b4b8fd33e69e29a841317b6ab665bc>();
    internal static readonly ILoader<object> typedslenum_d062602be0b4b8fd33e69e29a841317b6ab665bcLoader2 = new TypeDSLLoader(enum_d062602be0b4b8fd33e69e29a841317b6ab665bcLoader, 2);
    internal static readonly ILoader<File_class> File_classLoader = new EnumLoader<File_class>();
    internal static readonly ILoader<object> uriFile_classLoaderFalseTrueNone = new UriLoader(File_classLoader, false, true, null);
    internal static readonly ILoader<object> union_of_NullInstance_or_StringInstance = new UnionLoader(new List<ILoader> { NullInstance, StringInstance });
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_StringInstanceFalseFalseNone = new UriLoader(union_of_NullInstance_or_StringInstance, false, false, null);
    internal static readonly ILoader<object> union_of_NullInstance_or_IntegerInstance_or_LongInstance = new UnionLoader(new List<ILoader> { NullInstance, IntegerInstance, LongInstance });
    internal static readonly ILoader<object> union_of_FileLoader_or_DirectoryLoader = new UnionLoader(new List<ILoader> { FileLoader, DirectoryLoader });
    internal static readonly ILoader<List<OneOf<File, Directory>>> array_of_union_of_FileLoader_or_DirectoryLoader = new ArrayLoader<OneOf<File, Directory>>(union_of_FileLoader_or_DirectoryLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_union_of_FileLoader_or_DirectoryLoader = new UnionLoader(new List<ILoader> { NullInstance, array_of_union_of_FileLoader_or_DirectoryLoader });
    internal static readonly ILoader<object> secondaryfilesdslunion_of_NullInstance_or_array_of_union_of_FileLoader_or_DirectoryLoader = new SecondaryDSLLoader(union_of_NullInstance_or_array_of_union_of_FileLoader_or_DirectoryLoader);
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_StringInstanceTrueFalseNone = new UriLoader(union_of_NullInstance_or_StringInstance, true, false, null);
    internal static readonly ILoader<Directory_class> Directory_classLoader = new EnumLoader<Directory_class>();
    internal static readonly ILoader<object> uriDirectory_classLoaderFalseTrueNone = new UriLoader(Directory_classLoader, false, true, null);
    internal static readonly ILoader<object> union_of_NullInstance_or_BooleanInstance = new UnionLoader(new List<ILoader> { NullInstance, BooleanInstance });
    internal static readonly ILoader<object> union_of_NullInstance_or_LoadListingEnumLoader = new UnionLoader(new List<ILoader> { NullInstance, LoadListingEnumLoader });
    internal static readonly ILoader<List<SecondaryFileSchema>> array_of_SecondaryFileSchemaLoader = new ArrayLoader<SecondaryFileSchema>(SecondaryFileSchemaLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_SecondaryFileSchemaLoader_or_array_of_SecondaryFileSchemaLoader = new UnionLoader(new List<ILoader> { NullInstance, SecondaryFileSchemaLoader, array_of_SecondaryFileSchemaLoader });
    internal static readonly ILoader<object> secondaryfilesdslunion_of_NullInstance_or_SecondaryFileSchemaLoader_or_array_of_SecondaryFileSchemaLoader = new SecondaryDSLLoader(union_of_NullInstance_or_SecondaryFileSchemaLoader_or_array_of_SecondaryFileSchemaLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_or_ExpressionLoader = new UnionLoader(new List<ILoader> { NullInstance, StringInstance, array_of_StringInstance, ExpressionLoader });
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_StringInstance_or_array_of_StringInstance_or_ExpressionLoaderTrueFalseNone = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_or_ExpressionLoader, true, false, null);
    internal static readonly ILoader<object> union_of_NullInstance_or_StringInstance_or_ExpressionLoader = new UnionLoader(new List<ILoader> { NullInstance, StringInstance, ExpressionLoader });
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_StringInstance_or_ExpressionLoaderTrueFalseNone = new UriLoader(union_of_NullInstance_or_StringInstance_or_ExpressionLoader, true, false, null);
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, InputRecordSchemaLoader, InputEnumSchemaLoader, InputArraySchemaLoader, StringInstance });
    internal static readonly ILoader<List<OneOf<CWLType, InputRecordSchema, InputEnumSchema, InputArraySchema, string>>> array_of_union_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance = new ArrayLoader<OneOf<CWLType, InputRecordSchema, InputEnumSchema, InputArraySchema, string>>(union_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance);
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, InputRecordSchemaLoader, InputEnumSchemaLoader, InputArraySchemaLoader, StringInstance, array_of_union_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance });
    internal static readonly ILoader<object> typedslunion_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance2 = new TypeDSLLoader(union_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_InputRecordSchemaLoader_or_InputEnumSchemaLoader_or_InputArraySchemaLoader_or_StringInstance, 2);
    internal static readonly ILoader<List<InputRecordField>> array_of_InputRecordFieldLoader = new ArrayLoader<InputRecordField>(InputRecordFieldLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_InputRecordFieldLoader = new UnionLoader(new List<ILoader> { NullInstance, array_of_InputRecordFieldLoader });
    internal static readonly ILoader<object> idmapfieldsunion_of_NullInstance_or_array_of_InputRecordFieldLoader = new IdMapLoader(union_of_NullInstance_or_array_of_InputRecordFieldLoader, "name", "type");
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, OutputRecordSchemaLoader, OutputEnumSchemaLoader, OutputArraySchemaLoader, StringInstance });
    internal static readonly ILoader<List<OneOf<CWLType, OutputRecordSchema, OutputEnumSchema, OutputArraySchema, string>>> array_of_union_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance = new ArrayLoader<OneOf<CWLType, OutputRecordSchema, OutputEnumSchema, OutputArraySchema, string>>(union_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance);
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, OutputRecordSchemaLoader, OutputEnumSchemaLoader, OutputArraySchemaLoader, StringInstance, array_of_union_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance });
    internal static readonly ILoader<object> typedslunion_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance2 = new TypeDSLLoader(union_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_OutputRecordSchemaLoader_or_OutputEnumSchemaLoader_or_OutputArraySchemaLoader_or_StringInstance, 2);
    internal static readonly ILoader<List<OutputRecordField>> array_of_OutputRecordFieldLoader = new ArrayLoader<OutputRecordField>(OutputRecordFieldLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_OutputRecordFieldLoader = new UnionLoader(new List<ILoader> { NullInstance, array_of_OutputRecordFieldLoader });
    internal static readonly ILoader<object> idmapfieldsunion_of_NullInstance_or_array_of_OutputRecordFieldLoader = new IdMapLoader(union_of_NullInstance_or_array_of_OutputRecordFieldLoader, "name", "type");
    internal static readonly ILoader<object> union_of_NullInstance_or_AnyInstance = new UnionLoader(new List<ILoader> { NullInstance, AnyInstance });
    internal static readonly ILoader<object> union_of_CommandInputParameterLoader_or_WorkflowInputParameterLoader_or_OperationInputParameterLoader = new UnionLoader(new List<ILoader> { CommandInputParameterLoader, WorkflowInputParameterLoader, OperationInputParameterLoader });
    internal static readonly ILoader<List<OneOf<CommandInputParameter, WorkflowInputParameter, OperationInputParameter>>> array_of_union_of_CommandInputParameterLoader_or_WorkflowInputParameterLoader_or_OperationInputParameterLoader = new ArrayLoader<OneOf<CommandInputParameter, WorkflowInputParameter, OperationInputParameter>>(union_of_CommandInputParameterLoader_or_WorkflowInputParameterLoader_or_OperationInputParameterLoader);
    internal static readonly ILoader<object> idmapinputsarray_of_union_of_CommandInputParameterLoader_or_WorkflowInputParameterLoader_or_OperationInputParameterLoader = new IdMapLoader(array_of_union_of_CommandInputParameterLoader_or_WorkflowInputParameterLoader_or_OperationInputParameterLoader, "id", "type");
    internal static readonly ILoader<object> union_of_CommandOutputParameterLoader_or_ExpressionToolOutputParameterLoader_or_WorkflowOutputParameterLoader_or_OperationOutputParameterLoader = new UnionLoader(new List<ILoader> { CommandOutputParameterLoader, ExpressionToolOutputParameterLoader, WorkflowOutputParameterLoader, OperationOutputParameterLoader });
    internal static readonly ILoader<List<OneOf<CommandOutputParameter, ExpressionToolOutputParameter, WorkflowOutputParameter, OperationOutputParameter>>> array_of_union_of_CommandOutputParameterLoader_or_ExpressionToolOutputParameterLoader_or_WorkflowOutputParameterLoader_or_OperationOutputParameterLoader = new ArrayLoader<OneOf<CommandOutputParameter, ExpressionToolOutputParameter, WorkflowOutputParameter, OperationOutputParameter>>(union_of_CommandOutputParameterLoader_or_ExpressionToolOutputParameterLoader_or_WorkflowOutputParameterLoader_or_OperationOutputParameterLoader);
    internal static readonly ILoader<object> idmapoutputsarray_of_union_of_CommandOutputParameterLoader_or_ExpressionToolOutputParameterLoader_or_WorkflowOutputParameterLoader_or_OperationOutputParameterLoader = new IdMapLoader(array_of_union_of_CommandOutputParameterLoader_or_ExpressionToolOutputParameterLoader_or_WorkflowOutputParameterLoader_or_OperationOutputParameterLoader, "id", "type");
    internal static readonly ILoader<object> union_of_InlineJavascriptRequirementLoader_or_SchemaDefRequirementLoader_or_LoadListingRequirementLoader_or_DockerRequirementLoader_or_SoftwareRequirementLoader_or_InitialWorkDirRequirementLoader_or_EnvVarRequirementLoader_or_ShellCommandRequirementLoader_or_ResourceRequirementLoader_or_WorkReuseLoader_or_NetworkAccessLoader_or_InplaceUpdateRequirementLoader_or_ToolTimeLimitLoader_or_SubworkflowFeatureRequirementLoader_or_ScatterFeatureRequirementLoader_or_MultipleInputFeatureRequirementLoader_or_StepInputExpressionRequirementLoader = new UnionLoader(new List<ILoader> { InlineJavascriptRequirementLoader, SchemaDefRequirementLoader, LoadListingRequirementLoader, DockerRequirementLoader, SoftwareRequirementLoader, InitialWorkDirRequirementLoader, EnvVarRequirementLoader, ShellCommandRequirementLoader, ResourceRequirementLoader, WorkReuseLoader, NetworkAccessLoader, InplaceUpdateRequirementLoader, ToolTimeLimitLoader, SubworkflowFeatureRequirementLoader, ScatterFeatureRequirementLoader, MultipleInputFeatureRequirementLoader, StepInputExpressionRequirementLoader });
    internal static readonly ILoader<List<OneOf<InlineJavascriptRequirement, SchemaDefRequirement, LoadListingRequirement, DockerRequirement, SoftwareRequirement, InitialWorkDirRequirement, EnvVarRequirement, ShellCommandRequirement, ResourceRequirement, WorkReuse, NetworkAccess, InplaceUpdateRequirement, ToolTimeLimit, SubworkflowFeatureRequirement, ScatterFeatureRequirement, MultipleInputFeatureRequirement, StepInputExpressionRequirement>>> array_of_union_of_InlineJavascriptRequirementLoader_or_SchemaDefRequirementLoader_or_LoadListingRequirementLoader_or_DockerRequirementLoader_or_SoftwareRequirementLoader_or_InitialWorkDirRequirementLoader_or_EnvVarRequirementLoader_or_ShellCommandRequirementLoader_or_ResourceRequirementLoader_or_WorkReuseLoader_or_NetworkAccessLoader_or_InplaceUpdateRequirementLoader_or_ToolTimeLimitLoader_or_SubworkflowFeatureRequirementLoader_or_ScatterFeatureRequirementLoader_or_MultipleInputFeatureRequirementLoader_or_StepInputExpressionRequirementLoader = new ArrayLoader<OneOf<InlineJavascriptRequirement, SchemaDefRequirement, LoadListingRequirement, DockerRequirement, SoftwareRequirement, InitialWorkDirRequirement, EnvVarRequirement, ShellCommandRequirement, ResourceRequirement, WorkReuse, NetworkAccess, InplaceUpdateRequirement, ToolTimeLimit, SubworkflowFeatureRequirement, ScatterFeatureRequirement, MultipleInputFeatureRequirement, StepInputExpressionRequirement>>(union_of_InlineJavascriptRequirementLoader_or_SchemaDefRequirementLoader_or_LoadListingRequirementLoader_or_DockerRequirementLoader_or_SoftwareRequirementLoader_or_InitialWorkDirRequirementLoader_or_EnvVarRequirementLoader_or_ShellCommandRequirementLoader_or_ResourceRequirementLoader_or_WorkReuseLoader_or_NetworkAccessLoader_or_InplaceUpdateRequirementLoader_or_ToolTimeLimitLoader_or_SubworkflowFeatureRequirementLoader_or_ScatterFeatureRequirementLoader_or_MultipleInputFeatureRequirementLoader_or_StepInputExpressionRequirementLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_union_of_InlineJavascriptRequirementLoader_or_SchemaDefRequirementLoader_or_LoadListingRequirementLoader_or_DockerRequirementLoader_or_SoftwareRequirementLoader_or_InitialWorkDirRequirementLoader_or_EnvVarRequirementLoader_or_ShellCommandRequirementLoader_or_ResourceRequirementLoader_or_WorkReuseLoader_or_NetworkAccessLoader_or_InplaceUpdateRequirementLoader_or_ToolTimeLimitLoader_or_SubworkflowFeatureRequirementLoader_or_ScatterFeatureRequirementLoader_or_MultipleInputFeatureRequirementLoader_or_StepInputExpressionRequirementLoader = new UnionLoader(new List<ILoader> { NullInstance, array_of_union_of_InlineJavascriptRequirementLoader_or_SchemaDefRequirementLoader_or_LoadListingRequirementLoader_or_DockerRequirementLoader_or_SoftwareRequirementLoader_or_InitialWorkDirRequirementLoader_or_EnvVarRequirementLoader_or_ShellCommandRequirementLoader_or_ResourceRequirementLoader_or_WorkReuseLoader_or_NetworkAccessLoader_or_InplaceUpdateRequirementLoader_or_ToolTimeLimitLoader_or_SubworkflowFeatureRequirementLoader_or_ScatterFeatureRequirementLoader_or_MultipleInputFeatureRequirementLoader_or_StepInputExpressionRequirementLoader });
    internal static readonly ILoader<object> idmaprequirementsunion_of_NullInstance_or_array_of_union_of_InlineJavascriptRequirementLoader_or_SchemaDefRequirementLoader_or_LoadListingRequirementLoader_or_DockerRequirementLoader_or_SoftwareRequirementLoader_or_InitialWorkDirRequirementLoader_or_EnvVarRequirementLoader_or_ShellCommandRequirementLoader_or_ResourceRequirementLoader_or_WorkReuseLoader_or_NetworkAccessLoader_or_InplaceUpdateRequirementLoader_or_ToolTimeLimitLoader_or_SubworkflowFeatureRequirementLoader_or_ScatterFeatureRequirementLoader_or_MultipleInputFeatureRequirementLoader_or_StepInputExpressionRequirementLoader = new IdMapLoader(union_of_NullInstance_or_array_of_union_of_InlineJavascriptRequirementLoader_or_SchemaDefRequirementLoader_or_LoadListingRequirementLoader_or_DockerRequirementLoader_or_SoftwareRequirementLoader_or_InitialWorkDirRequirementLoader_or_EnvVarRequirementLoader_or_ShellCommandRequirementLoader_or_ResourceRequirementLoader_or_WorkReuseLoader_or_NetworkAccessLoader_or_InplaceUpdateRequirementLoader_or_ToolTimeLimitLoader_or_SubworkflowFeatureRequirementLoader_or_ScatterFeatureRequirementLoader_or_MultipleInputFeatureRequirementLoader_or_StepInputExpressionRequirementLoader, "class", "None");
    internal static readonly ILoader<List<object>> array_of_AnyInstance = new ArrayLoader<object>(AnyInstance);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_AnyInstance = new UnionLoader(new List<ILoader> { NullInstance, array_of_AnyInstance });
    internal static readonly ILoader<object> idmaphintsunion_of_NullInstance_or_array_of_AnyInstance = new IdMapLoader(union_of_NullInstance_or_array_of_AnyInstance, "class", "None");
    internal static readonly ILoader<object> union_of_NullInstance_or_CWLVersionLoader = new UnionLoader(new List<ILoader> { NullInstance, CWLVersionLoader });
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_CWLVersionLoaderFalseTrueNone = new UriLoader(union_of_NullInstance_or_CWLVersionLoader, false, true, null);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_StringInstance = new UnionLoader(new List<ILoader> { NullInstance, array_of_StringInstance });
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_array_of_StringInstanceTrueFalseNone = new UriLoader(union_of_NullInstance_or_array_of_StringInstance, true, false, null);
    internal static readonly ILoader<InlineJavascriptRequirement_class> InlineJavascriptRequirement_classLoader = new EnumLoader<InlineJavascriptRequirement_class>();
    internal static readonly ILoader<object> uriInlineJavascriptRequirement_classLoaderFalseTrueNone = new UriLoader(InlineJavascriptRequirement_classLoader, false, true, null);
    internal static readonly ILoader<SchemaDefRequirement_class> SchemaDefRequirement_classLoader = new EnumLoader<SchemaDefRequirement_class>();
    internal static readonly ILoader<object> uriSchemaDefRequirement_classLoaderFalseTrueNone = new UriLoader(SchemaDefRequirement_classLoader, false, true, null);
    internal static readonly ILoader<object> union_of_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader = new UnionLoader(new List<ILoader> { CommandInputRecordSchemaLoader, CommandInputEnumSchemaLoader, CommandInputArraySchemaLoader });
    internal static readonly ILoader<List<OneOf<CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema>>> array_of_union_of_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader = new ArrayLoader<OneOf<CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema>>(union_of_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader);
    internal static readonly ILoader<object> union_of_StringInstance_or_ExpressionLoader = new UnionLoader(new List<ILoader> { StringInstance, ExpressionLoader });
    internal static readonly ILoader<object> union_of_NullInstance_or_BooleanInstance_or_ExpressionLoader = new UnionLoader(new List<ILoader> { NullInstance, BooleanInstance, ExpressionLoader });
    internal static readonly ILoader<LoadListingRequirement_class> LoadListingRequirement_classLoader = new EnumLoader<LoadListingRequirement_class>();
    internal static readonly ILoader<object> uriLoadListingRequirement_classLoaderFalseTrueNone = new UriLoader(LoadListingRequirement_classLoader, false, true, null);
    internal static readonly ILoader<object> union_of_NullInstance_or_IntegerInstance_or_ExpressionLoader = new UnionLoader(new List<ILoader> { NullInstance, IntegerInstance, ExpressionLoader });
    internal static readonly ILoader<object> union_of_NullInstance_or_StringInstance_or_ExpressionLoader_or_array_of_StringInstance = new UnionLoader(new List<ILoader> { NullInstance, StringInstance, ExpressionLoader, array_of_StringInstance });
    internal static readonly ILoader<object> union_of_NullInstance_or_ExpressionLoader = new UnionLoader(new List<ILoader> { NullInstance, ExpressionLoader });
    internal static readonly ILoader<object> union_of_NullInstance_or_CommandLineBindingLoader = new UnionLoader(new List<ILoader> { NullInstance, CommandLineBindingLoader });
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, CommandInputRecordSchemaLoader, CommandInputEnumSchemaLoader, CommandInputArraySchemaLoader, StringInstance });
    internal static readonly ILoader<List<OneOf<CWLType, CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema, string>>> array_of_union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance = new ArrayLoader<OneOf<CWLType, CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema, string>>(union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance);
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, CommandInputRecordSchemaLoader, CommandInputEnumSchemaLoader, CommandInputArraySchemaLoader, StringInstance, array_of_union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance });
    internal static readonly ILoader<object> typedslunion_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance2 = new TypeDSLLoader(union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance, 2);
    internal static readonly ILoader<List<CommandInputRecordField>> array_of_CommandInputRecordFieldLoader = new ArrayLoader<CommandInputRecordField>(CommandInputRecordFieldLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_CommandInputRecordFieldLoader = new UnionLoader(new List<ILoader> { NullInstance, array_of_CommandInputRecordFieldLoader });
    internal static readonly ILoader<object> idmapfieldsunion_of_NullInstance_or_array_of_CommandInputRecordFieldLoader = new IdMapLoader(union_of_NullInstance_or_array_of_CommandInputRecordFieldLoader, "name", "type");
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, CommandOutputRecordSchemaLoader, CommandOutputEnumSchemaLoader, CommandOutputArraySchemaLoader, StringInstance });
    internal static readonly ILoader<List<OneOf<CWLType, CommandOutputRecordSchema, CommandOutputEnumSchema, CommandOutputArraySchema, string>>> array_of_union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance = new ArrayLoader<OneOf<CWLType, CommandOutputRecordSchema, CommandOutputEnumSchema, CommandOutputArraySchema, string>>(union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance);
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, CommandOutputRecordSchemaLoader, CommandOutputEnumSchemaLoader, CommandOutputArraySchemaLoader, StringInstance, array_of_union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance });
    internal static readonly ILoader<object> typedslunion_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance2 = new TypeDSLLoader(union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance, 2);
    internal static readonly ILoader<object> union_of_NullInstance_or_CommandOutputBindingLoader = new UnionLoader(new List<ILoader> { NullInstance, CommandOutputBindingLoader });
    internal static readonly ILoader<List<CommandOutputRecordField>> array_of_CommandOutputRecordFieldLoader = new ArrayLoader<CommandOutputRecordField>(CommandOutputRecordFieldLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_CommandOutputRecordFieldLoader = new UnionLoader(new List<ILoader> { NullInstance, array_of_CommandOutputRecordFieldLoader });
    internal static readonly ILoader<object> idmapfieldsunion_of_NullInstance_or_array_of_CommandOutputRecordFieldLoader = new IdMapLoader(union_of_NullInstance_or_array_of_CommandOutputRecordFieldLoader, "name", "type");
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_stdinLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, stdinLoader, CommandInputRecordSchemaLoader, CommandInputEnumSchemaLoader, CommandInputArraySchemaLoader, StringInstance, array_of_union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance });
    internal static readonly ILoader<object> typedslunion_of_CWLTypeLoader_or_stdinLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance2 = new TypeDSLLoader(union_of_CWLTypeLoader_or_stdinLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandInputRecordSchemaLoader_or_CommandInputEnumSchemaLoader_or_CommandInputArraySchemaLoader_or_StringInstance, 2);
    internal static readonly ILoader<object> union_of_CWLTypeLoader_or_stdoutLoader_or_stderrLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance = new UnionLoader(new List<ILoader> { CWLTypeLoader, stdoutLoader, stderrLoader, CommandOutputRecordSchemaLoader, CommandOutputEnumSchemaLoader, CommandOutputArraySchemaLoader, StringInstance, array_of_union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance });
    internal static readonly ILoader<object> typedslunion_of_CWLTypeLoader_or_stdoutLoader_or_stderrLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance2 = new TypeDSLLoader(union_of_CWLTypeLoader_or_stdoutLoader_or_stderrLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance_or_array_of_union_of_CWLTypeLoader_or_CommandOutputRecordSchemaLoader_or_CommandOutputEnumSchemaLoader_or_CommandOutputArraySchemaLoader_or_StringInstance, 2);
    internal static readonly ILoader<CommandLineTool_class> CommandLineTool_classLoader = new EnumLoader<CommandLineTool_class>();
    internal static readonly ILoader<object> uriCommandLineTool_classLoaderFalseTrueNone = new UriLoader(CommandLineTool_classLoader, false, true, null);
    internal static readonly ILoader<List<CommandInputParameter>> array_of_CommandInputParameterLoader = new ArrayLoader<CommandInputParameter>(CommandInputParameterLoader);
    internal static readonly ILoader<object> idmapinputsarray_of_CommandInputParameterLoader = new IdMapLoader(array_of_CommandInputParameterLoader, "id", "type");
    internal static readonly ILoader<List<CommandOutputParameter>> array_of_CommandOutputParameterLoader = new ArrayLoader<CommandOutputParameter>(CommandOutputParameterLoader);
    internal static readonly ILoader<object> idmapoutputsarray_of_CommandOutputParameterLoader = new IdMapLoader(array_of_CommandOutputParameterLoader, "id", "type");
    internal static readonly ILoader<object> union_of_StringInstance_or_ExpressionLoader_or_CommandLineBindingLoader = new UnionLoader(new List<ILoader> { StringInstance, ExpressionLoader, CommandLineBindingLoader });
    internal static readonly ILoader<List<OneOf<string, CommandLineBinding>>> array_of_union_of_StringInstance_or_ExpressionLoader_or_CommandLineBindingLoader = new ArrayLoader<OneOf<string, CommandLineBinding>>(union_of_StringInstance_or_ExpressionLoader_or_CommandLineBindingLoader);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_union_of_StringInstance_or_ExpressionLoader_or_CommandLineBindingLoader = new UnionLoader(new List<ILoader> { NullInstance, array_of_union_of_StringInstance_or_ExpressionLoader_or_CommandLineBindingLoader });
    internal static readonly ILoader<List<int>> array_of_IntegerInstance = new ArrayLoader<int>(IntegerInstance);
    internal static readonly ILoader<object> union_of_NullInstance_or_array_of_IntegerInstance = new UnionLoader(new List<ILoader> { NullInstance, array_of_IntegerInstance });
    internal static readonly ILoader<DockerRequirement_class> DockerRequirement_classLoader = new EnumLoader<DockerRequirement_class>();
    internal static readonly ILoader<object> uriDockerRequirement_classLoaderFalseTrueNone = new UriLoader(DockerRequirement_classLoader, false, true, null);
    internal static readonly ILoader<SoftwareRequirement_class> SoftwareRequirement_classLoader = new EnumLoader<SoftwareRequirement_class>();
    internal static readonly ILoader<object> uriSoftwareRequirement_classLoaderFalseTrueNone = new UriLoader(SoftwareRequirement_classLoader, false, true, null);
    internal static readonly ILoader<List<SoftwarePackage>> array_of_SoftwarePackageLoader = new ArrayLoader<SoftwarePackage>(SoftwarePackageLoader);
    internal static readonly ILoader<object> idmappackagesarray_of_SoftwarePackageLoader = new IdMapLoader(array_of_SoftwarePackageLoader, "package", "specs");
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_array_of_StringInstanceFalseFalseNone = new UriLoader(union_of_NullInstance_or_array_of_StringInstance, false, false, null);
    internal static readonly ILoader<InitialWorkDirRequirement_class> InitialWorkDirRequirement_classLoader = new EnumLoader<InitialWorkDirRequirement_class>();
    internal static readonly ILoader<object> uriInitialWorkDirRequirement_classLoaderFalseTrueNone = new UriLoader(InitialWorkDirRequirement_classLoader, false, true, null);
    internal static readonly ILoader<object> union_of_NullInstance_or_DirentLoader_or_ExpressionLoader_or_FileLoader_or_DirectoryLoader_or_array_of_union_of_FileLoader_or_DirectoryLoader = new UnionLoader(new List<ILoader> { NullInstance, DirentLoader, ExpressionLoader, FileLoader, DirectoryLoader, array_of_union_of_FileLoader_or_DirectoryLoader });
    internal static readonly ILoader<List<OneOf<None, Dirent, string, File, Directory, List<OneOf<File, Directory>>>>> array_of_union_of_NullInstance_or_DirentLoader_or_ExpressionLoader_or_FileLoader_or_DirectoryLoader_or_array_of_union_of_FileLoader_or_DirectoryLoader = new ArrayLoader<OneOf<None, Dirent, string, File, Directory, List<OneOf<File, Directory>>>>(union_of_NullInstance_or_DirentLoader_or_ExpressionLoader_or_FileLoader_or_DirectoryLoader_or_array_of_union_of_FileLoader_or_DirectoryLoader);
    internal static readonly ILoader<object> union_of_ExpressionLoader_or_array_of_union_of_NullInstance_or_DirentLoader_or_ExpressionLoader_or_FileLoader_or_DirectoryLoader_or_array_of_union_of_FileLoader_or_DirectoryLoader = new UnionLoader(new List<ILoader> { ExpressionLoader, array_of_union_of_NullInstance_or_DirentLoader_or_ExpressionLoader_or_FileLoader_or_DirectoryLoader_or_array_of_union_of_FileLoader_or_DirectoryLoader });
    internal static readonly ILoader<EnvVarRequirement_class> EnvVarRequirement_classLoader = new EnumLoader<EnvVarRequirement_class>();
    internal static readonly ILoader<object> uriEnvVarRequirement_classLoaderFalseTrueNone = new UriLoader(EnvVarRequirement_classLoader, false, true, null);
    internal static readonly ILoader<List<EnvironmentDef>> array_of_EnvironmentDefLoader = new ArrayLoader<EnvironmentDef>(EnvironmentDefLoader);
    internal static readonly ILoader<object> idmapenvDefarray_of_EnvironmentDefLoader = new IdMapLoader(array_of_EnvironmentDefLoader, "envName", "envValue");
    internal static readonly ILoader<ShellCommandRequirement_class> ShellCommandRequirement_classLoader = new EnumLoader<ShellCommandRequirement_class>();
    internal static readonly ILoader<object> uriShellCommandRequirement_classLoaderFalseTrueNone = new UriLoader(ShellCommandRequirement_classLoader, false, true, null);
    internal static readonly ILoader<ResourceRequirement_class> ResourceRequirement_classLoader = new EnumLoader<ResourceRequirement_class>();
    internal static readonly ILoader<object> uriResourceRequirement_classLoaderFalseTrueNone = new UriLoader(ResourceRequirement_classLoader, false, true, null);
    internal static readonly ILoader<object> union_of_NullInstance_or_IntegerInstance_or_LongInstance_or_DoubleInstance_or_ExpressionLoader = new UnionLoader(new List<ILoader> { NullInstance, IntegerInstance, LongInstance, DoubleInstance, ExpressionLoader });
    internal static readonly ILoader<WorkReuse_class> WorkReuse_classLoader = new EnumLoader<WorkReuse_class>();
    internal static readonly ILoader<object> uriWorkReuse_classLoaderFalseTrueNone = new UriLoader(WorkReuse_classLoader, false, true, null);
    internal static readonly ILoader<object> union_of_BooleanInstance_or_ExpressionLoader = new UnionLoader(new List<ILoader> { BooleanInstance, ExpressionLoader });
    internal static readonly ILoader<NetworkAccess_class> NetworkAccess_classLoader = new EnumLoader<NetworkAccess_class>();
    internal static readonly ILoader<object> uriNetworkAccess_classLoaderFalseTrueNone = new UriLoader(NetworkAccess_classLoader, false, true, null);
    internal static readonly ILoader<InplaceUpdateRequirement_class> InplaceUpdateRequirement_classLoader = new EnumLoader<InplaceUpdateRequirement_class>();
    internal static readonly ILoader<object> uriInplaceUpdateRequirement_classLoaderFalseTrueNone = new UriLoader(InplaceUpdateRequirement_classLoader, false, true, null);
    internal static readonly ILoader<ToolTimeLimit_class> ToolTimeLimit_classLoader = new EnumLoader<ToolTimeLimit_class>();
    internal static readonly ILoader<object> uriToolTimeLimit_classLoaderFalseTrueNone = new UriLoader(ToolTimeLimit_classLoader, false, true, null);
    internal static readonly ILoader<object> union_of_IntegerInstance_or_LongInstance_or_ExpressionLoader = new UnionLoader(new List<ILoader> { IntegerInstance, LongInstance, ExpressionLoader });
    internal static readonly ILoader<object> union_of_NullInstance_or_InputBindingLoader = new UnionLoader(new List<ILoader> { NullInstance, InputBindingLoader });
    internal static readonly ILoader<ExpressionTool_class> ExpressionTool_classLoader = new EnumLoader<ExpressionTool_class>();
    internal static readonly ILoader<object> uriExpressionTool_classLoaderFalseTrueNone = new UriLoader(ExpressionTool_classLoader, false, true, null);
    internal static readonly ILoader<List<WorkflowInputParameter>> array_of_WorkflowInputParameterLoader = new ArrayLoader<WorkflowInputParameter>(WorkflowInputParameterLoader);
    internal static readonly ILoader<object> idmapinputsarray_of_WorkflowInputParameterLoader = new IdMapLoader(array_of_WorkflowInputParameterLoader, "id", "type");
    internal static readonly ILoader<List<ExpressionToolOutputParameter>> array_of_ExpressionToolOutputParameterLoader = new ArrayLoader<ExpressionToolOutputParameter>(ExpressionToolOutputParameterLoader);
    internal static readonly ILoader<object> idmapoutputsarray_of_ExpressionToolOutputParameterLoader = new IdMapLoader(array_of_ExpressionToolOutputParameterLoader, "id", "type");
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_StringInstance_or_array_of_StringInstanceFalseFalse0 = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance, false, false, 0);
    internal static readonly ILoader<object> union_of_NullInstance_or_LinkMergeMethodLoader = new UnionLoader(new List<ILoader> { NullInstance, LinkMergeMethodLoader });
    internal static readonly ILoader<object> union_of_NullInstance_or_PickValueMethodLoader = new UnionLoader(new List<ILoader> { NullInstance, PickValueMethodLoader });
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_StringInstance_or_array_of_StringInstanceFalseFalse2 = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance, false, false, 2);
    internal static readonly ILoader<List<WorkflowStepInput>> array_of_WorkflowStepInputLoader = new ArrayLoader<WorkflowStepInput>(WorkflowStepInputLoader);
    internal static readonly ILoader<object> idmapin_array_of_WorkflowStepInputLoader = new IdMapLoader(array_of_WorkflowStepInputLoader, "id", "source");
    internal static readonly ILoader<object> union_of_StringInstance_or_WorkflowStepOutputLoader = new UnionLoader(new List<ILoader> { StringInstance, WorkflowStepOutputLoader });
    internal static readonly ILoader<List<OneOf<string, WorkflowStepOutput>>> array_of_union_of_StringInstance_or_WorkflowStepOutputLoader = new ArrayLoader<OneOf<string, WorkflowStepOutput>>(union_of_StringInstance_or_WorkflowStepOutputLoader);
    internal static readonly ILoader<object> union_of_array_of_union_of_StringInstance_or_WorkflowStepOutputLoader = new UnionLoader(new List<ILoader> { array_of_union_of_StringInstance_or_WorkflowStepOutputLoader });
    internal static readonly ILoader<object> uriunion_of_array_of_union_of_StringInstance_or_WorkflowStepOutputLoaderTrueFalseNone = new UriLoader(union_of_array_of_union_of_StringInstance_or_WorkflowStepOutputLoader, true, false, null);
    internal static readonly ILoader<object> union_of_StringInstance_or_CommandLineToolLoader_or_ExpressionToolLoader_or_WorkflowLoader_or_OperationLoader = new UnionLoader(new List<ILoader> { StringInstance, CommandLineToolLoader, ExpressionToolLoader, WorkflowLoader, OperationLoader });
    internal static readonly ILoader<object> union_of_NullInstance_or_ScatterMethodLoader = new UnionLoader(new List<ILoader> { NullInstance, ScatterMethodLoader });
    internal static readonly ILoader<object> uriunion_of_NullInstance_or_ScatterMethodLoaderFalseTrueNone = new UriLoader(union_of_NullInstance_or_ScatterMethodLoader, false, true, null);
    internal static readonly ILoader<Workflow_class> Workflow_classLoader = new EnumLoader<Workflow_class>();
    internal static readonly ILoader<object> uriWorkflow_classLoaderFalseTrueNone = new UriLoader(Workflow_classLoader, false, true, null);
    internal static readonly ILoader<List<WorkflowOutputParameter>> array_of_WorkflowOutputParameterLoader = new ArrayLoader<WorkflowOutputParameter>(WorkflowOutputParameterLoader);
    internal static readonly ILoader<object> idmapoutputsarray_of_WorkflowOutputParameterLoader = new IdMapLoader(array_of_WorkflowOutputParameterLoader, "id", "type");
    internal static readonly ILoader<List<WorkflowStep>> array_of_WorkflowStepLoader = new ArrayLoader<WorkflowStep>(WorkflowStepLoader);
    internal static readonly ILoader<object> union_of_array_of_WorkflowStepLoader = new UnionLoader(new List<ILoader> { array_of_WorkflowStepLoader });
    internal static readonly ILoader<object> idmapstepsunion_of_array_of_WorkflowStepLoader = new IdMapLoader(union_of_array_of_WorkflowStepLoader, "id", "None");
    internal static readonly ILoader<SubworkflowFeatureRequirement_class> SubworkflowFeatureRequirement_classLoader = new EnumLoader<SubworkflowFeatureRequirement_class>();
    internal static readonly ILoader<object> uriSubworkflowFeatureRequirement_classLoaderFalseTrueNone = new UriLoader(SubworkflowFeatureRequirement_classLoader, false, true, null);
    internal static readonly ILoader<ScatterFeatureRequirement_class> ScatterFeatureRequirement_classLoader = new EnumLoader<ScatterFeatureRequirement_class>();
    internal static readonly ILoader<object> uriScatterFeatureRequirement_classLoaderFalseTrueNone = new UriLoader(ScatterFeatureRequirement_classLoader, false, true, null);
    internal static readonly ILoader<MultipleInputFeatureRequirement_class> MultipleInputFeatureRequirement_classLoader = new EnumLoader<MultipleInputFeatureRequirement_class>();
    internal static readonly ILoader<object> uriMultipleInputFeatureRequirement_classLoaderFalseTrueNone = new UriLoader(MultipleInputFeatureRequirement_classLoader, false, true, null);
    internal static readonly ILoader<StepInputExpressionRequirement_class> StepInputExpressionRequirement_classLoader = new EnumLoader<StepInputExpressionRequirement_class>();
    internal static readonly ILoader<object> uriStepInputExpressionRequirement_classLoaderFalseTrueNone = new UriLoader(StepInputExpressionRequirement_classLoader, false, true, null);
    internal static readonly ILoader<Operation_class> Operation_classLoader = new EnumLoader<Operation_class>();
    internal static readonly ILoader<object> uriOperation_classLoaderFalseTrueNone = new UriLoader(Operation_classLoader, false, true, null);
    internal static readonly ILoader<List<OperationInputParameter>> array_of_OperationInputParameterLoader = new ArrayLoader<OperationInputParameter>(OperationInputParameterLoader);
    internal static readonly ILoader<object> idmapinputsarray_of_OperationInputParameterLoader = new IdMapLoader(array_of_OperationInputParameterLoader, "id", "type");
    internal static readonly ILoader<List<OperationOutputParameter>> array_of_OperationOutputParameterLoader = new ArrayLoader<OperationOutputParameter>(OperationOutputParameterLoader);
    internal static readonly ILoader<object> idmapoutputsarray_of_OperationOutputParameterLoader = new IdMapLoader(array_of_OperationOutputParameterLoader, "id", "type");
    internal static readonly ILoader<object> union_of_CommandLineToolLoader_or_ExpressionToolLoader_or_WorkflowLoader_or_OperationLoader = new UnionLoader(new List<ILoader> { CommandLineToolLoader, ExpressionToolLoader, WorkflowLoader, OperationLoader });
    internal static readonly ILoader<List<OneOf<CommandLineTool, ExpressionTool, Workflow, Operation>>> array_of_union_of_CommandLineToolLoader_or_ExpressionToolLoader_or_WorkflowLoader_or_OperationLoader = new ArrayLoader<OneOf<CommandLineTool, ExpressionTool, Workflow, Operation>>(union_of_CommandLineToolLoader_or_ExpressionToolLoader_or_WorkflowLoader_or_OperationLoader);
    internal static readonly ILoader<object> union_of_CommandLineToolLoader_or_ExpressionToolLoader_or_WorkflowLoader_or_OperationLoader_or_array_of_union_of_CommandLineToolLoader_or_ExpressionToolLoader_or_WorkflowLoader_or_OperationLoader = new UnionLoader(new List<ILoader> { CommandLineToolLoader, ExpressionToolLoader, WorkflowLoader, OperationLoader, array_of_union_of_CommandLineToolLoader_or_ExpressionToolLoader_or_WorkflowLoader_or_OperationLoader });

}
